<?xml version="1.0" encoding="UTF-8" ?>

<!--
  MikuMikuDance
    model-data(*.pmd) on XML
    DTD definition

  License : The MIT License
  Copyright(c) 2010 MikuToga Partners

  SYSTEM ID: http://mikutoga.sourceforge.jp/xml/dtd/pmdxml-101009.dtd
-->


<!-- ROOT -->
<!ELEMENT pmdModel (
    i18nName*, description+, license*, credits*, meta*,
    materialList,
    toonMap,
    boneList,
    boneGroupList,
    ikChainList,
    morphList,
    rigidList,
    rigidGroupList,
    jointList,
    surfaceGroupList,
    vertexList
) >
<!ATTLIST pmdModel
    xmlns              CDATA #IMPLIED
    xmlns:xsi          CDATA #IMPLIED
    xsi:schemaLocation CDATA #IMPLIED
    schemaVersion      CDATA #FIXED "100923"
    name               CDATA #REQUIRED
>


<!-- Multilingual name. -->
<!ELEMENT i18nName EMPTY>
<!ATTLIST i18nName
    lang CDATA #REQUIRED
    name CDATA #REQUIRED
>


<!-- Break line. -->
<!ELEMENT br EMPTY>


<!-- Description note about model. -->
<!ELEMENT description (#PCDATA | br)* >
<!ATTLIST description
    lang      CDATA "ja"
    xml:space CDATA #FIXED "preserve"
>


<!-- License term of usage. -->
<!ELEMENT license (#PCDATA | br)* >
<!ATTLIST license
    lang      CDATA "ja"
    xml:space CDATA #FIXED "preserve"
>


<!-- Credits for someone. -->
<!ELEMENT credits (#PCDATA | br)* >
<!ATTLIST credits
    lang      CDATA "ja"
    xml:space CDATA #FIXED "preserve"
>


<!--
Meta-information of model.
Use free.
but, some meta-name has recommended usage.
+ "generator" (Generator application name)
+ "siteURL" (Website URL)
+ "imageURL" (Thumbnail image URL)
-->
<!ELEMENT meta EMPTY>
<!ATTLIST meta
    name    CDATA #REQUIRED
    content CDATA #REQUIRED
>


<!--
Material list.
All visual things can be tracked from here.
-->
<!ELEMENT materialList (material)* >


<!--
Material definition.
Colors, shading, any other definitions.
-->
<!ELEMENT material (
    i18nName*,
    diffuse,
    specular,
    ambient,
    toon?,
    textureFile?,
    spheremapFile?
)*>
<!ATTLIST material
    name              CDATA #IMPLIED
    showEdge          CDATA #REQUIRED
    surfaceGroupIdRef CDATA #REQUIRED
>


<!-- Diffuse color definition. -->
<!ELEMENT diffuse EMPTY>
<!ATTLIST diffuse
    r     CDATA #REQUIRED
    g     CDATA #REQUIRED
    b     CDATA #REQUIRED
    alpha CDATA #REQUIRED
>


<!-- Specular color definition. -->
<!ELEMENT specular EMPTY>
<!ATTLIST specular
    r         CDATA #REQUIRED
    g         CDATA #REQUIRED
    b         CDATA #REQUIRED
    shininess CDATA #REQUIRED
>


<!-- Ambient color definition. -->
<!ELEMENT ambient EMPTY>
<!ATTLIST ambient
    r CDATA #REQUIRED
    g CDATA #REQUIRED
    b CDATA #REQUIRED
>


<!-- Reference for Toon-image. -->
<!ELEMENT toon EMPTY>
<!ATTLIST toon
    toonFileIdRef CDATA #REQUIRED
>


<!-- Texture file information. -->
<!ELEMENT textureFile EMPTY>
<!ATTLIST textureFile
    winFileName CDATA #REQUIRED
>


<!-- Sphere-map file information. -->
<!ELEMENT spheremapFile EMPTY>
<!ATTLIST spheremapFile
    winFileName CDATA #REQUIRED
>


<!-- Toon-file mappings. -->
<!ELEMENT toonMap (toonDef)* >


<!-- Toon-file information. -->
<!ELEMENT toonDef EMPTY>
<!ATTLIST toonDef
    toonFileId  CDATA #REQUIRED
    index       CDATA #REQUIRED
    winFileName CDATA #REQUIRED
>


<!-- List of bone information. -->
<!ELEMENT boneList (bone)* >


<!-- Bone definition. -->
<!ELEMENT bone (
    i18nName*,
    position,
    (rotationRatio | ikBone)?,
    boneChain
) >
<!ATTLIST bone
    name   CDATA #REQUIRED
    boneId CDATA #REQUIRED
    type   (
          ROTATE
        | ROTMOV
        | IK
        | UNKNOWN
        | UNDERIK
        | UNDERROT
        | IKCONNECTED
        | HIDDEN
        | TWIST
        | LINKEDROT
    ) #REQUIRED
>


<!-- position information. -->
<!ELEMENT position EMPTY>
<!ATTLIST position
    x CDATA #REQUIRED
    y CDATA #REQUIRED
    z CDATA #REQUIRED
>


<!-- Relationship-info between bones. -->
<!ELEMENT boneChain EMPTY>
<!ATTLIST boneChain
    prevBoneIdRef CDATA #IMPLIED
    nextBoneIdRef CDATA #IMPLIED
>


<!-- Rotation ratio between Linked-rotationed bones. -->
<!ELEMENT rotationRatio EMPTY>
<!ATTLIST rotationRatio
    ratio CDATA #REQUIRED
>


<!-- Reference to IK-Bone. -->
<!ELEMENT ikBone EMPTY>
<!ATTLIST ikBone
    boneIdRef CDATA #REQUIRED
>


<!-- List of Bone-group. -->
<!ELEMENT boneGroupList (boneGroup)* >


<!-- Bone-group. -->
<!ELEMENT boneGroup (i18nName*, boneGroupMember*) >
<!ATTLIST boneGroup
    name CDATA #REQUIRED
>


<!-- Member of Bone-group. -->
<!ELEMENT boneGroupMember EMPTY>
<!ATTLIST boneGroupMember
    boneIdRef CDATA #REQUIRED
>


<!-- List of IK chain. -->
<!ELEMENT ikChainList (ikChain)* >


<!-- IK chained bones definition. -->
<!ELEMENT ikChain (chainOrder)+ >
<!ATTLIST ikChain
    ikBoneIdRef    CDATA #REQUIRED
    recursiveDepth CDATA #REQUIRED
    weight         CDATA #REQUIRED
>


<!-- Part of IK chained bones. -->
<!ELEMENT chainOrder EMPTY>
<!ATTLIST chainOrder
    boneIdRef CDATA #REQUIRED
>


<!-- List of morphing definition. -->
<!ELEMENT morphList (morph)* >


<!-- Morphing definition. -->
<!ELEMENT morph (i18nName*, morphVertex*) >
<!ATTLIST morph
    name CDATA #REQUIRED
    type (
          EYEBROW
        | EYE
        | LIP
        | EXTRA
    ) #REQUIRED
>


<!-- Morphing vertex information. -->
<!ELEMENT morphVertex EMPTY>
<!ATTLIST morphVertex
    vtxIdRef CDATA #REQUIRED
    xOff     CDATA #REQUIRED
    yOff     CDATA #REQUIRED
    zOff     CDATA #REQUIRED
>


<!-- list of Rigid-body definition. -->
<!ELEMENT rigidList (rigid)* >


<!-- Rigid-body definition. -->
<!ELEMENT rigid (
    i18nName*,
    linkedBone?,
    (rigidShapeSphere | rigidShapeBox | rigidShapeCapsule),
    position,
    radRotation,
    dynamics,
    throughRigidGroup*
) >
<!ATTLIST rigid
    name     CDATA #REQUIRED
    rigidId  CDATA #REQUIRED
    behavior (
          FOLLOWBONE
        | ONLYDYNAMICS
        | BONEDDYNAMICS
    ) #REQUIRED
>


<!-- Referenced Bone from Rigid-body. -->
<!ELEMENT linkedBone EMPTY>
<!ATTLIST linkedBone
    boneIdRef CDATA #REQUIRED
>


<!-- Sphere shape of Rigid-body. -->
<!ELEMENT rigidShapeSphere EMPTY>
<!ATTLIST rigidShapeSphere
    radius CDATA #REQUIRED
>


<!-- Box shape of Rigid-body. -->
<!ELEMENT rigidShapeBox EMPTY>
<!ATTLIST rigidShapeBox
    width  CDATA #REQUIRED
    height CDATA #REQUIRED
    depth  CDATA #REQUIRED
>


<!-- Capsule shape of Rigid-body. -->
<!ELEMENT rigidShapeCapsule EMPTY>
<!ATTLIST rigidShapeCapsule
    height CDATA #REQUIRED
    radius CDATA #REQUIRED
>


<!-- Rotaion information by radian. -->
<!ELEMENT radRotation EMPTY>
<!ATTLIST radRotation
    xRad CDATA #REQUIRED
    yRad CDATA #REQUIRED
    zRad CDATA #REQUIRED
>


<!-- Dynamics parameters. -->
<!ELEMENT dynamics EMPTY>
<!ATTLIST dynamics
    mass            CDATA #REQUIRED
    dampingPosition CDATA #REQUIRED
    dampingRotation CDATA #REQUIRED
    restitution     CDATA #REQUIRED
    friction        CDATA #REQUIRED
>


<!-- Reference for non-collision rigid-group. -->
<!ELEMENT throughRigidGroup EMPTY>
<!ATTLIST throughRigidGroup
    rigidGroupIdRef CDATA #REQUIRED
>


<!-- List of Rigid-body group. -->
<!ELEMENT rigidGroupList (rigidGroup)* >


<!-- Rigid-body group. -->
<!ELEMENT rigidGroup (rigidGroupMember)* >
<!ATTLIST rigidGroup
    rigidGroupId CDATA #REQUIRED
>


<!-- Member of Rigid-body group. -->
<!ELEMENT rigidGroupMember EMPTY>
<!ATTLIST rigidGroupMember
    rigidIdRef CDATA #REQUIRED
>


<!-- List of joint definition. -->
<!ELEMENT jointList (joint)* >


<!-- Joint definition. -->
<!ELEMENT joint (
    i18nName*,
    jointedRigidPair,
    position,    limitPosition,
    radRotation, limitRotation,
    elasticPosition,
    elasticRotation
) >
<!ATTLIST joint
    name CDATA #REQUIRED
>


<!-- Jointed-bones information. -->
<!ELEMENT jointedRigidPair EMPTY>
<!ATTLIST jointedRigidPair
    rigidIdRef2 CDATA #REQUIRED
    rigidIdRef1 CDATA #REQUIRED
>


<!-- Limit of Position. -->
<!ELEMENT limitPosition EMPTY>
<!ATTLIST limitPosition
    xFrom CDATA #REQUIRED
    xTo   CDATA #REQUIRED
    yFrom CDATA #REQUIRED
    yTo   CDATA #REQUIRED
    zFrom CDATA #REQUIRED
    zTo   CDATA #REQUIRED
>


<!-- Limit of Rotation. -->
<!ELEMENT limitRotation EMPTY>
<!ATTLIST limitRotation
    xFrom CDATA #REQUIRED
    xTo   CDATA #REQUIRED
    yFrom CDATA #REQUIRED
    yTo   CDATA #REQUIRED
    zFrom CDATA #REQUIRED
    zTo   CDATA #REQUIRED
>


<!-- Elastic position of joint. -->
<!ELEMENT elasticPosition EMPTY>
<!ATTLIST elasticPosition
    x CDATA #REQUIRED
    y CDATA #REQUIRED
    z CDATA #REQUIRED
>


<!-- Elastic rotation of joint by degree. -->
<!ELEMENT elasticRotation EMPTY>
<!ATTLIST elasticRotation
    xDeg CDATA #REQUIRED
    yDeg CDATA #REQUIRED
    zDeg CDATA #REQUIRED
>


<!-- List of surface group. -->
<!ELEMENT surfaceGroupList (surfaceGroup)* >


<!-- Surface group. -->
<!ELEMENT surfaceGroup (surface)* >
<!ATTLIST surfaceGroup
    surfaceGroupId CDATA #REQUIRED
>


<!-- Each surface with Triangle. -->
<!ELEMENT surface EMPTY>
<!ATTLIST surface
    vtxIdRef1 CDATA #REQUIRED
    vtxIdRef2 CDATA #REQUIRED
    vtxIdRef3 CDATA #REQUIRED
>


<!-- List of vertex. -->
<!ELEMENT vertexList (vertex)* >


<!-- Vertex definition. -->
<!ELEMENT vertex (position, normal, uvMap, skinning) >
<!ATTLIST vertex
    vtxId    CDATA #REQUIRED
    showEdge CDATA #REQUIRED
>


<!-- Normal vector definition. -->
<!ELEMENT normal EMPTY>
<!ATTLIST normal
    x CDATA #REQUIRED
    y CDATA #REQUIRED
    z CDATA #REQUIRED
>


<!-- UV-mapping information. -->
<!ELEMENT uvMap EMPTY>
<!ATTLIST uvMap
    u CDATA #REQUIRED
    v CDATA #REQUIRED
>


<!-- Skinning definition from vertex to bone. -->
<!ELEMENT skinning EMPTY>
<!ATTLIST skinning
    boneIdRef1    CDATA #REQUIRED
    boneIdRef2    CDATA #REQUIRED
    weightBalance CDATA #REQUIRED
>


<!-- EOF -->
